openapi: 3.0.3
info:
  contact:
    email: enzo.dardaillon@mines-ales.org
  description: Cette API g√®re les tokens du projet Isla.
  title: Isla - Token API
  version: 1.0.0
servers:
- url: http://localhost:8080
tags:
- description: Everything about tokens
  name: token
- description: Operations about users
  name: user
paths:
  /operate:
    post:
      description: "This request will first send a signal to the API Dispatcher, then\
        \ a response from the system will be received."
      operationId: operate
      parameters:
      - description: The text input
        explode: true
        in: query
        name: input
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            plain/text:
              schema:
                example: This is a text generated by ChatGPT
                type: string
          description: successful operation
      summary: Send request to the system
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /token:
    get:
      description: It let you know if you have remaining credits
      operationId: get_token
      parameters:
      - description: User that own tokens
        explode: true
        in: query
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful operation
        "405":
          description: Invalid input
      security:
      - api_key:
        - read:token
      summary: Request a token
      tags:
      - token
      x-openapi-router-controller: openapi_server.controllers.token_controller
    post:
      description: Add token
      operationId: add_token
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: nb_token
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
        "405":
          description: Invalid input
      summary: Add a Token to a User
      tags:
      - token
      x-openapi-router-controller: openapi_server.controllers.token_controller
  /user:
    post:
      description: Create a user
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: successful operation
      summary: Create user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/{username}:
    get:
      description: ""
      operationId: get_user_by_name
      parameters:
      - description: The name that needs to be fetched.
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: successful operation
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      summary: Get user by user name
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
components:
  schemas:
    Token:
      example:
        expire_date: 2000-01-23T04:56:07.000+00:00
        user_id: dc92bf38-cce2-4f32-8fe3-b52806f8c352
        id: c9914832-aabb-4830-8962-7ed78ca2e97e
      properties:
        id:
          example: c9914832-aabb-4830-8962-7ed78ca2e97e
          format: uuid
          title: id
          type: string
        user_id:
          example: dc92bf38-cce2-4f32-8fe3-b52806f8c352
          format: uuid
          title: user_id
          type: string
        expire_date:
          format: date-time
          title: expire_date
          type: string
      title: Token
      type: object
    User:
      example:
        firstName: John
        lastName: James
        password: "12345"
        user_id: dc92bf38-cce2-4f32-8fe3-b52806f8c352
        email: john@email.com
        username: XxIsla30xX
      properties:
        user_id:
          example: dc92bf38-cce2-4f32-8fe3-b52806f8c352
          format: uuid
          title: user_id
          type: string
        username:
          example: XxIsla30xX
          title: username
          type: string
        firstName:
          example: John
          title: firstName
          type: string
        lastName:
          example: James
          title: lastName
          type: string
        email:
          example: john@email.com
          title: email
          type: string
        password:
          example: "12345"
          title: password
          type: string
        credit:
          example: 10
          title: credit
          type: integer
      title: User
      type: object
  securitySchemes:
    api_key:
      in: header
      name: api_key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_api_key
