# -*- coding: utf-8 -*-
"""ISLA

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oSBfusa4YbgayNfJsqERwv2p5bACqICC
"""

"""Importer les bibliothèques nécessaires :"""

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
import numpy as np

"""Tokeniser les phrases et les étiquettes :"""

phrases_meteo = [
    "Quel temps fait-il aujourd'hui ?",
    "Quel temps fera t-il demain ?",
    "Quel temps fera t-il",
    "Donne-moi la prévision météo.",
    "Fais-moi savoir s'il va pleuvoir demain.",
    "Est-ce qu'il va faire chaud demain ?",
    "Donne-moi la température actuelle à New York.",
    "Y a-t-il une alerte météo en cours ?",
    "Quand est-ce que le soleil se lève demain ?",
    "Dois-je prendre un parapluie aujourd'hui ?",
    "Quelle est la météo dans ma ville natale ?",
    "Fais-moi savoir s'il y a du brouillard ce matin.",
    "Donne-moi les prévisions pour la plage ce week-end.",
    "Vérifie si le ciel est dégagé.",
    "Quel est le pourcentage d'humidité prévu aujourd'hui ?",
    "Est-ce que ça va geler cette nuit ?",
    "Y a-t-il une tempête en approche ?",
    "Donne-moi les prévisions pour la semaine à venir.",
    "Quand est-ce que la prochaine vague de chaleur est prévue ?",
    "Suis-je censé m'attendre à du vent fort aujourd'hui ?",
    "Quel est le taux de précipitations pour demain matin ?",
    "Consulte la météo marine pour connaître les conditions en mer.",
    "Est-ce que le temps sera agréable ce week-end ?",
    "Y a-t-il des avertissements de tornades en cours ?",
    "Fais-moi savoir si la température va monter ou descendre.",
    "Quelle est la pression atmosphérique actuelle ?",
    "À quoi ressemble la météo en montagne aujourd'hui ?",
    "Est-ce que le ciel sera nuageux demain ?",
    "Donne-moi les prévisions météo pour mon prochain voyage.",
    "Y a-t-il des risques d'inondations dans la région ?",
    "Quelle est la météo idéale pour un pique-nique ?",
    "Informe-moi sur la météo en Europe.",
    "Est-ce que le temps sera stable cette semaine ?",
    "Quand est-ce que la prochaine éclipse solaire se produira ?",
    "Consulte la météo satellite pour voir les nuages en temps réel.",
    "Donne-moi les prévisions de température pour la nuit prochaine.",
    "Est-ce que le vent va se calmer dans l'après-midi ?",
    "Quelle est la probabilité de gelée tardive ce printemps ?",
    "Fais-moi savoir si le temps va s'améliorer demain.",
    "Y a-t-il des prévisions de grêle dans la région ?",
    "Quand est-ce que la prochaine marée haute est prévue ?",
    "Est-ce que le temps influencera les vols aujourd'hui ?",
    "Quand est-ce que la prochaine éruption volcanique est attendue ?",
    "Fais-moi savoir si une alerte météo a été émise.",
    "Est-ce que le temps sera favorable à la pêche ce week-end ?",
    "Y a-t-il un front froid qui arrive ?",
    "Donne-moi les prévisions météo pour le Grand Canyon."
]

phrases_chatGPT = [
    "Dis-moi une blague.",
    "Quelle est la capitale de la France ?",
    "Combien de planètes dans notre système solaire ?",
    "Peux-tu me donner la recette d'un gâteau au chocolat ?",
    "Quel est le dernier film de science-fiction à succès ?",
    "Quelle est la date de la prochaine éclipse solaire ?",
    "Comment fonctionne la photosynthèse ?",
    "Quel est le plus haut sommet du monde ?",
    "Imagine un exemple de poème romantique.",
    "Qui a écrit le livre 'Guerre et Paix' ?",
    "Quelle est la formule chimique de l'eau ?",
    "Quels sont les avantages du yoga pour la santé ?",
    "Peux-tu me dire une blague drôle ?",
    "Quel est le plus grand océan de la Terre ?",
    "Comment faire pousser des tomates dans un jardin ?",
    "Quelle est la durée de vie moyenne d'un chien ?",
    "Peux-tu me raconter l'histoire de la tour de Pise ?",
    "Quels sont les symptômes du rhume des foins ?",
    "Quelle est la différence entre un crocodile et un alligator ?",
    "Comment fonctionne la blockchain ?",
    "Quelle est la signification du mot 'éphémère' ?",
    "Peux-tu me donner des conseils pour économiser de l'énergie à la maison ?",
    "Quelle est la recette d'une pizza margherita ?",
    "Qui a peint 'La Joconde' ?",
    "Comment fonctionne la théorie de la relativité d'Einstein ?",
    "Quelle est la monnaie utilisée au Japon ?",
    "Peux-tu me recommander un bon livre de science-fiction ?",
    "Quels sont les effets du changement climatique sur la planète ?",
    "Quelle est la composition chimique de l'air que nous respirons ?",
    "Comment fonctionne la vaccination contre les maladies ?",
    "Quelle est la capitale de l'Australie ?",
    "Qui a découvert la pénicilline ?",
    "Quels sont les symptômes du diabète ?",
    "Quelle est la distance moyenne entre la Terre et la Lune ?",
    "Peux-tu me donner des astuces pour apprendre une nouvelle langue ?",
    "Quelle est la hauteur de la tour Eiffel ?",
    "Comment fonctionne l'intelligence artificielle ?",
    "Quels sont les bienfaits de la méditation pour le bien-être mental ?",
    "Quelle est la plus grande espèce de requin ?",
    "Qui a écrit 'Romeo et Juliette' ?",
]

phrases_news = [
    "Quelles sont les dernières nouvelles du jour ?",
    "Donne-moi les titres des actualités en ce moment.",
    "Quels sont les événements marquants du monde aujourd'hui ?",
    "Fais-moi un résumé des nouvelles du matin.",
    "Quelles sont les principales informations à la une ?",
    "Y a-t-il des nouvelles importantes dans le domaine de la politique ?",
    "Quels sont les derniers développements dans le domaine de la technologie ?",
    "Donne-moi des informations sur l'économie mondiale.",
    "Quelles sont les actualités sportives les plus récentes ?",
    "Y a-t-il des nouvelles concernant la santé publique ?",
    "Quels sont les événements culturels à surveiller cette semaine ?",
    "Fais-moi savoir si une nouvelle crise internationale est en cours.",
    "Quelles sont les avancées scientifiques les plus récentes ?",
    "Donne-moi des informations sur les dernières élections.",
    "Quelles sont les dernières actualités sur l'environnement ?",
    "Y a-t-il des nouvelles liées aux célébrités et au divertissement ?",
    "Quelles sont les dernières mises à jour sur la météo ?",
    "Fais-moi un résumé des nouvelles locales.",
    "Quelles sont les actualités sur la sécurité nationale ?",
    "Donne-moi des informations sur les dernières découvertes spatiales.",
    "Quelles sont les dernières actualités sur l'éducation ?",
    "Y a-t-il des nouvelles sur les droits de l'homme en ce moment ?",
    "Quels sont les événements majeurs sur les marchés financiers ?",
    "Quelles sont les nouvelles tendances dans le monde de la mode ?",
    "Fais-moi un résumé des nouvelles internationales.",
    "Quelles sont les actualités sur la recherche médicale ?",
    "Y a-t-il des nouvelles sur les conflits régionaux ?",
    "Donne-moi des informations sur les dernières avancées technologiques.",
    "Quelles sont les dernières actualités sur la criminalité ?",
    "Quels sont les développements récents dans le domaine de l'environnement ?",
    "Quelles sont les actualités sur les droits civiques en ce moment ?",
    "Fais-moi un résumé des nouvelles politiques nationales.",
    "Quelles sont les dernières nouvelles sur les tendances alimentaires ?",
    "Y a-t-il des nouvelles sur les évolutions de la mobilité urbaine ?",
    "Donne-moi des informations sur les derniers projets artistiques.",
    "Quelles sont les actualités sur l'énergie et les ressources naturelles ?",
    "Quels sont les événements culturels à ne pas manquer ce mois-ci ?",
    "Fais-moi savoir si une nouvelle pandémie est signalée dans le monde.",
]

phrases_domotique = [
    "Allume la lumière du salon.",
    "Baisse la température de la maison.",
    "Ferme les volets.",
    "Active le chauffage de la salle de bains.",
    "Augmente la luminosité des lumières du salon.",
    "Ouvre les stores de la chambre à coucher.",
    "Diminue la température du thermostat de la maison.",
    "Active le mode sécurité de la maison.",
    "Baisse le volume de la musique.",
    "Ferme toutes les portes et les fenêtres.",
    "Active la caméra de sécurité à l'extérieur.",
    "Allume la cafetière pour préparer du café.",
    "Ferme le robinet d'eau de la cuisine.",
    "Active l'éclairage de la salle à manger.",
    "Augmente la température du thermostat de la chambre.",
    "Ouvre la porte du garage.",
    "Active le mode soirée pour les lumières.",
    "Baisse la luminosité des lumières de la cuisine.",
    "Ferme le volet roulant de la salle de séjour.",
    "Réglez le thermostat en mode économie d'énergie.",
    "Allume la télévision du salon.",
    "Éteins toutes les lumières de la maison.",
    "Active le système de surveillance intérieure.",
    "Ouvre la fenêtre du bureau.",
    "Baisse le store de la véranda.",
    "Active la musique d'ambiance dans la salle de bains.",
    "Ferme le rideau électrique du salon.",
    "Réglez la couleur des lumières de la chambre à coucher sur bleu.",
    "Ouvre la porte d'entrée principale.",
    "Éteins le système de chauffage dans la cuisine.",
    "Active le mode nuit pour la maison.",
    "Augmente le volume de la musique dans la chambre.",
    "Ferme le portail du jardin.",
    "Allume la cafetière et prépare du café.",
    "Baisse la luminosité des lumières du couloir.",
    "Active la climatisation dans le bureau.",
    "Éteins toutes les prises électriques de la maison.",
    "Ouvre la porte de la buanderie.",
    "Active le mode vacances pour la sécurité.",
    "Augmente la luminosité des lumières du hall d'entrée.",
    "Réglez la température du chauffe-eau sur 40 degrés.",
    "Ferme les stores extérieurs de la terrasse.",
    "Allume la cheminée du salon.",
    "Éteins la lumière du dressing.",
    "Baisse la température du réfrigérateur.",
    "Active le robot aspirateur pour nettoyer la maison.",
    "Ouvre la porte du garage pour la livraison.",
    "Réglez la musique sur la playlist relaxante.",
    "Ferme la porte coulissante du balcon.",
    "Active la veilleuse dans la chambre des enfants.",
    "Éteins le système d'arrosage automatique du jardin.",
    "Baisse la température de la piscine."
]


etiquettes_meteo = ["meteo"] * len(phrases_meteo)
etiquettes_chatGPT = ["chatGPT"] * len(phrases_chatGPT)
etiquettes_news = ["news"] * len(phrases_news)
etiquettes_domotique = ["domotique"] * len(phrases_domotique)

# Combinez toutes les phrases et étiquettes dans une seule liste
toutes_phrases = phrases_meteo + phrases_chatGPT + phrases_news + phrases_domotique
toutes_etiquettes = etiquettes_meteo + etiquettes_chatGPT + etiquettes_news + etiquettes_domotique

tokenizer = Tokenizer()
tokenizer.fit_on_texts(toutes_phrases)

etiquettes = ["meteo", "chatGPT", "news", "domotique"]

"""Convertir les phrases en séquences numériques et les étiquettes en indices :"""

sequences = tokenizer.texts_to_sequences(toutes_phrases)
label_indices = [etiquettes.index(label) for label in toutes_etiquettes]

"""Remplir les séquences pour qu'elles aient toutes la même longueur :"""

max_sequence_length = max(len(seq) for seq in sequences)
sequences = pad_sequences(sequences, maxlen=max_sequence_length, padding='post')

"""Créer le modèle d'apprentissage automatique. Vous pouvez utiliser un modèle de réseau de neurones simple pour cela :"""

model = keras.Sequential([
    keras.layers.Embedding(input_dim=len(tokenizer.word_index) + 1, output_dim=64, input_length=max_sequence_length),
    keras.layers.Flatten(),
    keras.layers.Dense(64, activation='relu'),
    keras.layers.Dense(len(etiquettes), activation='softmax')
])

model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

"""Entraîner le modèle avec vos données :"""

model.fit(sequences, np.array(label_indices), epochs=10)

"""Maintenant, vous pouvez utiliser le modèle entraîné pour prédire l'API appropriée en fonction de la phrase d'entrée :"""

def test_model(model, tokenizer, max_sequence_length, etiquettes):
    test_phrases = [
        ("Quel temps fait-il demain ?", "meteo"),
        ("Dis-moi une blague.", "chatGPT"),
        ("Donne-moi les actualités du jour.", "news"),
        ("Éteins la lumière de la cuisine.", "domotique"),
        ("Quelle est la météo à Paris ?", "meteo"),
        ("Raconte-moi une histoire.", "chatGPT"),
        ("Montre-moi les derniers articles.", "news"),
        ("Allume la télévision dans le salon.", "domotique"),
        ("Donne-moi les prévisions météo pour le Grand Canyon.", "meteo"),
        ("Comment fonctionne la blockchain ?", "chatGPT"),
        ("Ferme les volets.", "domotique"),
        ("Qui a écrit 'Romeo et Juliette' ?", "chatGPT"),
        ("Quel temps fera t-il demain ?", "meteo")
    ]

    correct_predictions = 0

    for phrase, vrai_etiquette in test_phrases:
        predicted_api = predict_api_test(model, tokenizer, max_sequence_length, etiquettes, phrase)
        reussi = "Réussi" if predicted_api == vrai_etiquette else "Pas réussi"
        print(f"Phrase : '{phrase}' (Vraie étiquette : {vrai_etiquette}) => API prédite : {predicted_api} ({reussi})")
        if reussi == "Réussi":
            correct_predictions += 1

    accuracy = correct_predictions / len(test_phrases) * 100
    print();
    print("*********************");
    print(f"Score final : {accuracy}% de prédictions correctes")
    print("*********************");


# Fonction pour prédire l'API appropriée
def predict_api_test(model, tokenizer, max_sequence_length, etiquettes, sentence):
    sequence = tokenizer.texts_to_sequences([sentence])
    sequence = pad_sequences(sequence, maxlen=max_sequence_length, padding='post')
    prediction = model.predict(sequence)
    predicted_label_index = np.argmax(prediction)
    return etiquettes[predicted_label_index]

# Utilisez la fonction de test pour évaluer le modèle
test_model(model, tokenizer, max_sequence_length, etiquettes)

model.save("isla.h5") 

"""Test final"""

def predict_api(sentence):
    sequence = tokenizer.texts_to_sequences([sentence])
    sequence = pad_sequences(sequence, maxlen=max_sequence_length, padding='post')
    prediction = model.predict(sequence)
    predicted_label_index = np.argmax(prediction)
    return etiquettes[predicted_label_index]

# Utilisez la fonction predict_api pour déterminer l'API appropriée pour une phrase donnée
input_sentence = "Combien de temps de trajet entre Alès et Toulouse ?"
api = predict_api(input_sentence)
print(f"L'API appropriée pour la phrase '{input_sentence}' est : {api}")